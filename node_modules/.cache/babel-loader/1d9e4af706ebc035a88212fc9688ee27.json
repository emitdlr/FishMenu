{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\edlr7\\\\Fish-Menu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\edlr7\\\\Fish-Menu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\edlr7\\\\Fish-Menu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\edlr7\\\\Fish-Menu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\edlr7\\\\Fish-Menu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import Header from\"./Header\";import Order from\"./Order\";import Inventory from\"./Inventory\";import sampleFishes from\"../sample-fishes\";import Fish from\"./Fish\";import base from\"../base\";import fishes from\"../sample-fishes\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={fishes:{},order:{}};_this.addFish=function(fish){// 1. Take a copy of the existing state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. Add our new fish to that fishes variable\nfishes[\"fish\".concat(Date.now())]=fish;// 3. Set the new fishes object to state\n_this.setState({fishes});};_this.updateFish=function(key,updatedFish){// Take a copy of the current state\nvar fishes=_objectSpread({},_this.state.fishes);// Update that state\nfishes[key]=updatedFish;// Set that to state\n_this.setState({fishes});};_this.deleteFish=function(key){// get a copy of state\nvar fishes=_objectSpread({},_this.state.fishes);// update state\nfishes[key]=null;// update state\n_this.setState({fishes});};_this.loadSampleFishes=function(){_this.setState({fishes:sampleFishes});};_this.addToOrder=function(key){// 1. take a copy of state\nvar order=_objectSpread({},_this.state.order);// 2. Either add to the order, or update the number in our order\norder[key]=order[key]+1||1;// 3. Call setState to update our state object\n_this.setState({order});};_this.removeFromOrder=function(key){// take a copy of state\nvar order=_objectSpread({},_this.state.order);// Remove item from order\ndelete order[key];// Call setState to update our state object\n_this.setState({order});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var params=this.props.match.params;// first reinstate our localStorage\nvar localStorageRef=localStorage.getItem(params.storeId);if(localStorageRef){this.setState({order:JSON.parse(localStorageRef)});}this.ref=base.syncState(\"\".concat(params.storeId,\"/fishes\"),{context:this,state:\"fishes\"});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){console.log(this.state.order);localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.order));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){base.removeBinding(this.ref);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"catch-of-the-day\"},/*#__PURE__*/React.createElement(\"div\",{className:\"menu\"},/*#__PURE__*/React.createElement(Header,{tagline:\"Fresh Seafood Market\"}),/*#__PURE__*/React.createElement(\"ul\",{className:\"fishes\"},Object.keys(this.state.fishes).map(function(key){return/*#__PURE__*/React.createElement(Fish,{key:key,index:key,details:_this2.state.fishes[key],addToOrder:_this2.addToOrder});}))),/*#__PURE__*/React.createElement(Order,{fishes:this.state.fishes,order:this.state.order,removeFromOrder:this.removeFromOrder}),/*#__PURE__*/React.createElement(Inventory,{addFish:this.addFish,updateFish:this.updateFish,deleteFish:this.deleteFish,loadSampleFishes:this.loadSampleFishes,fishes:this.state.fishes,storeId:this.props.match.params.storeId}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Users/edlr7/Fish-Menu/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","fishes","App","state","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","console","log","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":"kuBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,GAEMC,CAAAA,G,2TACJC,K,CAAQ,CACNF,MAAM,CAAE,EADF,CAENG,KAAK,CAAE,EAFD,C,OAmCRC,O,CAAU,SAAAC,IAAI,CAAI,CAChB;AACA,GAAML,CAAAA,MAAM,kBAAQ,MAAKE,KAAL,CAAWF,MAAnB,CAAZ,CACA;AACAA,MAAM,eAAQM,IAAI,CAACC,GAAL,EAAR,EAAN,CAA8BF,IAA9B,CACA;AACA,MAAKG,QAAL,CAAc,CAAER,MAAF,CAAd,EACD,C,OAEDS,U,CAAa,SAACC,GAAD,CAAMC,WAAN,CAAsB,CACjC;AACA,GAAMX,CAAAA,MAAM,kBAAQ,MAAKE,KAAL,CAAWF,MAAnB,CAAZ,CACA;AACAA,MAAM,CAACU,GAAD,CAAN,CAAcC,WAAd,CACA;AACA,MAAKH,QAAL,CAAc,CAAER,MAAF,CAAd,EACD,C,OAEDY,U,CAAa,SAAAF,GAAG,CAAI,CAClB;AACA,GAAMV,CAAAA,MAAM,kBAAO,MAAKE,KAAL,CAAWF,MAAlB,CAAZ,CACA;AACAA,MAAM,CAACU,GAAD,CAAN,CAAc,IAAd,CACA;AACA,MAAKF,QAAL,CAAc,CAAER,MAAF,CAAd,EACD,C,OAEDa,gB,CAAmB,UAAM,CACvB,MAAKL,QAAL,CAAc,CAAER,MAAM,CAAEH,YAAV,CAAd,EACD,C,OAEDiB,U,CAAa,SAAAJ,GAAG,CAAI,CAClB;AACA,GAAMP,CAAAA,KAAK,kBAAQ,MAAKD,KAAL,CAAWC,KAAnB,CAAX,CACA;AACAA,KAAK,CAACO,GAAD,CAAL,CAAaP,KAAK,CAACO,GAAD,CAAL,CAAa,CAAb,EAAkB,CAA/B,CACA;AACA,MAAKF,QAAL,CAAc,CAAEL,KAAF,CAAd,EACD,C,OAEDY,e,CAAkB,SAAAL,GAAG,CAAI,CACnB;AACA,GAAMP,CAAAA,KAAK,kBAAQ,MAAKD,KAAL,CAAWC,KAAnB,CAAX,CACA;AACA,MAAOA,CAAAA,KAAK,CAACO,GAAD,CAAZ,CACA;AACA,MAAKF,QAAL,CAAc,CAAEL,KAAF,CAAd,EACL,C,gEAzED,4BAAoB,IACVa,CAAAA,MADU,CACC,KAAKC,KAAL,CAAWC,KADZ,CACVF,MADU,CAElB;AACA,GAAMG,CAAAA,eAAe,CAAGC,YAAY,CAACC,OAAb,CAAqBL,MAAM,CAACM,OAA5B,CAAxB,CACA,GAAIH,eAAJ,CAAqB,CACnB,KAAKX,QAAL,CAAc,CAAEL,KAAK,CAAEoB,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAT,CAAd,EACD,CAED,KAAKM,GAAL,CAAW1B,IAAI,CAAC2B,SAAL,WAAkBV,MAAM,CAACM,OAAzB,YAA2C,CACpDK,OAAO,CAAE,IAD2C,CAEpDzB,KAAK,CAAE,QAF6C,CAA3C,CAAX,CAID,C,kCAED,6BAAqB,CACnB0B,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWC,KAAvB,EACAiB,YAAY,CAACU,OAAb,CACE,KAAKb,KAAL,CAAWC,KAAX,CAAiBF,MAAjB,CAAwBM,OAD1B,CAEEC,IAAI,CAACQ,SAAL,CAAe,KAAK7B,KAAL,CAAWC,KAA1B,CAFF,EAID,C,oCAED,+BAAuB,CACrBJ,IAAI,CAACiC,aAAL,CAAmB,KAAKP,GAAxB,EACD,C,sBAmDD,iBAAS,iBACP,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,CAAC,MAAf,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,sBAAhB,EADF,cAEE,0BAAI,SAAS,CAAC,QAAd,EACGQ,MAAM,CAACC,IAAP,CAAY,KAAKhC,KAAL,CAAWF,MAAvB,EAA+BmC,GAA/B,CAAmC,SAAAzB,GAAG,qBACrC,oBAAC,IAAD,EACE,GAAG,CAAEA,GADP,CAEE,KAAK,CAAEA,GAFT,CAGE,OAAO,CAAE,MAAI,CAACR,KAAL,CAAWF,MAAX,CAAkBU,GAAlB,CAHX,CAIE,UAAU,CAAE,MAAI,CAACI,UAJnB,EADqC,EAAtC,CADH,CAFF,CADF,cAcE,oBAAC,KAAD,EACA,MAAM,CAAE,KAAKZ,KAAL,CAAWF,MADnB,CAEA,KAAK,CAAE,KAAKE,KAAL,CAAWC,KAFlB,CAGA,eAAe,CAAE,KAAKY,eAHtB,EAdF,cAoBE,oBAAC,SAAD,EACE,OAAO,CAAE,KAAKX,OADhB,CAEE,UAAU,CAAE,KAAKK,UAFnB,CAGE,UAAU,CAAE,KAAKG,UAHnB,CAIE,gBAAgB,CAAE,KAAKC,gBAJzB,CAKE,MAAM,CAAE,KAAKX,KAAL,CAAWF,MALrB,CAME,OAAO,CAAE,KAAKiB,KAAL,CAAWC,KAAX,CAAiBF,MAAjB,CAAwBM,OANnC,EApBF,CADF,CA+BD,C,iBArHe7B,KAAK,CAAC2C,S,EAwHxB,cAAenC,CAAAA,GAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\nimport fishes from \"../sample-fishes\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\"\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.order);\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = fish => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // Update that state\r\n    fishes[key] = updatedFish;\r\n    // Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = key => {\r\n    // get a copy of state\r\n    const fishes = {...this.state.fishes};\r\n    // update state\r\n    fishes[key] = null;\r\n    // update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = key => {\r\n        // take a copy of state\r\n        const order = { ...this.state.order };\r\n        // Remove item from order\r\n        delete order[key];\r\n        // Call setState to update our state object\r\n        this.setState({ order });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order \r\n        fishes={this.state.fishes} \r\n        order={this.state.order} \r\n        removeFromOrder={this.removeFromOrder}\r\n        />\r\n\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}