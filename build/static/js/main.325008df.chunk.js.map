{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","class","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.325008df.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n    return (cents / 100).toLocaleString(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\"\r\n    });\r\n  }\r\n  \r\n  export function rando(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n  }\r\n  \r\n  export function slugify(text) {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, \"-\")\r\n      .replace(/[^\\w-]+/g, \"\")\r\n      .replace(/--+/g, \"-\")\r\n      .replace(/^-+/, \"\")\r\n      .replace(/-+$/, \"\");\r\n  }\r\n  \r\n  export function getFunName() {\r\n    const adjectives = [\r\n      \"adorable\",\r\n      \"beautiful\",\r\n      \"clean\",\r\n      \"drab\",\r\n      \"elegant\",\r\n      \"fancy\",\r\n      \"glamorous\",\r\n      \"handsome\",\r\n      \"long\",\r\n      \"magnificent\",\r\n      \"old-fashioned\",\r\n      \"plain\",\r\n      \"quaint\",\r\n      \"sparkling\",\r\n      \"ugliest\",\r\n      \"unsightly\",\r\n      \"angry\",\r\n      \"bewildered\",\r\n      \"clumsy\",\r\n      \"defeated\",\r\n      \"embarrassed\",\r\n      \"fierce\",\r\n      \"grumpy\",\r\n      \"helpless\",\r\n      \"itchy\",\r\n      \"jealous\",\r\n      \"lazy\",\r\n      \"mysterious\",\r\n      \"nervous\",\r\n      \"obnoxious\",\r\n      \"panicky\",\r\n      \"repulsive\",\r\n      \"scary\",\r\n      \"thoughtless\",\r\n      \"uptight\",\r\n      \"worried\"\r\n    ];\r\n  \r\n    const nouns = [\r\n      \"women\",\r\n      \"men\",\r\n      \"children\",\r\n      \"teeth\",\r\n      \"feet\",\r\n      \"people\",\r\n      \"leaves\",\r\n      \"mice\",\r\n      \"geese\",\r\n      \"halves\",\r\n      \"knives\",\r\n      \"wives\",\r\n      \"lives\",\r\n      \"elves\",\r\n      \"loaves\",\r\n      \"potatoes\",\r\n      \"tomatoes\",\r\n      \"cacti\",\r\n      \"foci\",\r\n      \"fungi\",\r\n      \"nuclei\",\r\n      \"syllabuses\",\r\n      \"analyses\",\r\n      \"diagnoses\",\r\n      \"oases\",\r\n      \"theses\",\r\n      \"crises\",\r\n      \"phenomena\",\r\n      \"criteria\",\r\n      \"data\"\r\n    ];\r\n  \r\n    return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n  }\r\n  ","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  };\r\n\r\n  myInput = React.createRef();\r\n\r\n  goToStore = event => {\r\n\r\n    event.preventDefault();\r\n\r\n    const storeName = this.myInput.current.value;\r\n\r\n    this.props.history.push(`/store/${storeName}`);\r\n\r\n  };\r\n    render() {\r\n        return ( \r\n            <form className=\"store-selector\"onSubmit={this.goToStore}>\r\n            <h2> Please Enter A Store </h2>\r\n            <input type=\"text\" \r\n            ref={this.myInput}\r\n            required placeholder=\"Store Name\" defaultValue={getFunName()} />\r\n            <button type=\"submit\">Visit Store</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends React.Component {\r\n    render () {\r\n        return (\r\n            <header className=\"top\">\r\n                <h1>Catch\r\n                <span className=\"ofThe\">\r\n                <span className=\"of\">Of</span>\r\n                <span className=\"the\">The</span>\r\n                </span>\r\n                Day\r\n                </h1>\r\n                <h3 className=\"tagline\">\r\n                <span>{this.props.tagline}</span>\r\n            </h3>\r\n            </header>\r\n\r\n        );\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {formatPrice} from \"../helpers\"\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n\r\nclass Order extends React.Component {\r\n\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n\r\n    renderOrder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === \"available\";\r\n        const transitionOptions = {\r\n          classNames: \"order\",\r\n          key,\r\n          timeout: {enter:250, exit:250}\r\n        };\r\n\r\n        if (!fish) return null;\r\n\r\n        if (!isAvailable) {\r\n          return (\r\n            <CSSTransition {...transitionOptions}>\r\n            <li key={key}>\r\n              Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n            </li>\r\n            </CSSTransition>\r\n          );\r\n        }\r\n        return (\r\n          <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            <span>\r\n              <TransitionGroup component=\"span\" className=\"count\">\r\n                <CSSTransition {...transitionOptions}\r\n                >\r\n\r\n            <span>{count}</span>\r\n                </CSSTransition>\r\n              </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n            </span>\r\n          </li>\r\n          </CSSTransition>\r\n        );\r\n      };\r\n    render () {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <header className=\"top\">\r\n                <div className=\"order-wrap\">\r\n                   <h2>Order</h2>\r\n                   <TransitionGroup component=\"ul\" className=\"order\">\r\n                   {orderIds.map(this.renderOrder)}  \r\n                   </TransitionGroup>\r\n                   <div className=\"total\">\r\n                       Total:\r\n                       <strong>{formatPrice(total)}</strong>\r\n                   </div>\r\n\r\n                </div>\r\n            </header>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n};\r\n\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createFish = event => {\r\n\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value\r\n    };\r\n    this.props.addFish(fish);\r\n\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func\r\n  };\r\n  handleChange = event => {\r\n    console.log(event.currentTarget.value);\r\n    // Take a copy of the curernt fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In With GitHub\r\n    </button>\r\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\r\n      Log In With Twitter\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\r\n      Log In With Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from \"re-base\";\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp =  firebase.initializeApp({\r\n        apiKey: \"AIzaSyDLGF4PKnqfeeh9NyuuXDpsMKaABqfZB_I\",\r\n        authDomain: \"catch-of-the-day-2b427.firebaseapp.com\",\r\n        databaseURL: \"https://catch-of-the-day-2b427-default-rtdb.firebaseio.com\",\r\n      });\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// named export //\r\nexport {firebaseApp};\r\n\r\n// default export //\r\nexport default base;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  state = {\r\n    uid:null,\r\n    owner: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    // Look up the current store in the firebase database\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    console.log(store);\r\n    // Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n\r\n    // Check if they are logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // must be the owner, then just render the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {formatPrice} from \"../helpers\";\r\n\r\nclass Fish extends React.Component {\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number,\r\n        }),\r\n        addToOrder: PropTypes.func, \r\n    }\r\n    render () {\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available';\r\n\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">\r\n                    {name}\r\n                    <span class=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p className=\"fish-description\">\r\n                    {desc}\r\n                </p>\r\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\r\n                    {isAvailable ? 'Add To Order' : 'Sold Out!'}</button>\r\n            </li>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Fish;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\nimport fish from \"../sample-fishes\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\"\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.order);\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = fish => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // Update that state\r\n    fishes[key] = updatedFish;\r\n    // Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = key => {\r\n    // get a copy of state\r\n    const fishes = {...this.state.fishes};\r\n    // update state\r\n    fishes[key] = null;\r\n    // update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = key => {\r\n        // take a copy of state\r\n        const order = { ...this.state.order };\r\n        // Remove item from order\r\n        delete order[key];\r\n        // Call setState to update our state object\r\n        this.setState({ order });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order \r\n        fishes={this.state.fishes} \r\n        order={this.state.order} \r\n        removeFromOrder={this.removeFromOrder}\r\n        />\r\n\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found!</h2>\r\n    </div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nconst Router =  () => (\r\n    <BrowserRouter>\r\n       <Switch>\r\n           <Route exact path= \"/\" component={StorePicker} /> \r\n           <Route path= \"/store/:storeId\" component={App} />\r\n           <Route component={NotFound} />\r\n        </Switch> \r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Router from \"./components/Router\";\r\nimport './css/style.css';\r\n\r\n\r\nrender (<Router />, document.querySelector ('#main'));\r\n\r\nexport default Router;"],"sourceRoot":""}